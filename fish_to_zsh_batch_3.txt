# Additional converted Fish functions (Batch 3)

# derived_data - Spins up a RAM disk for Xcode DerivedData
function derived_data() {
    local quiet="$1"
    local drive_name="DerivedData"
    local default_size=10
    local target_path="/Volumes/$drive_name"
    local icon_file="~/Pictures/Icons/Agua Onyx Icons/Onyx Media Drive.png"
    
    if [[ -d "$target_path" ]]; then
        echo "$drive_name already mounted"
        local output=$(diskutil list "$drive_name")
    else
        local output=$(ramdisk "$default_size" "$drive_name")
        fileicon set "$target_path" "$icon_file"
    fi
    
    if [[ -z "$quiet" ]]; then
        echo "$output"
    fi
}

# hgrep - Grep command history
function hgrep() {
    history | grep "$@"
}

# stash - Git stash
function stash() {
    git stash "$@"
}

# push - Git push
function push() {
    git push "$@"
}

# textmate - Manage TextMate bundles (converted from 📝_textmate)
function textmate() {
    echo "📝 TextMate - https://github.com/textmate/textmate"
    echo
    local bundles=(blackpearl dashmate editorconfig fish gradle kotlin tomorrow-theme ublime)
    local bundle_dev="~/dev/textmate"
    local bundle_dir="~/Library/Application Support/TextMate/Bundles"
    
    mkdir -p "$bundle_dev" "$bundle_dir"
    pushd "$bundle_dev"
    
    for bundle in "${bundles[@]}"; do
        if [[ ! -e "$bundle.tmbundle" ]]; then
            case "$bundle" in
                blackpearl)
                    clone_or_pull "$bundle.tmbundle/Themes" "git@github.com:ajwitte/textmate-goodies.git"
                    tmbundleplist \
                        "Black Pearl Theme" \
                        "Colorful and Black & White color schemes. Plist generated by tmbundleplist function." \
                        "git@github.com:ajwitte/textmate-goodies.git" \
                        > "$bundle.tmbundle/Info.plist"
                    ;;
                dashmate)
                    clone_or_pull "DashMate.tmbundle" "git@github.com:ram-nadella/DashMate.tmbundle.git"
                    ;;
                editorconfig)
                    clone_or_pull "$bundle" "git@github.com:Mr0grog/editorconfig-textmate.git"
                    local ec_version=0.3.1
                    curl -L -O -# "https://github.com/Mr0grog/editorconfig-textmate/releases/download/v$ec_version/editorconfig-textmate-$ec_version.tmplugin.zip"
                    local newest_file=$(ls -1t | head -n 1)
                    unzip -o "$newest_file"
                    rm -f "$newest_file"
                    [[ $(status is-login) ]] && open "editorconfig-textmate.tmplugin"
                    touch "$bundle.tmbundle"
                    ;;
                fish)
                    clone_or_pull "$bundle.tmbundle" "git@github.com:l15n/fish-tmbundle.git"
                    ;;
                gradle)
                    clone_or_pull "$bundle.tmbundle" "git@github.com:alkemist/gradle.tmbundle.git"
                    ;;
                kotlin)
                    clone_or_pull "$bundle" "git@github.com:sargunster/kotlin-textmate-bundle.git"
                    local bundle="$bundle/Kotlin"
                    ;;
                tomorrow-theme)
                    clone_or_pull "$bundle" "git@github.com:chriskempson/tomorrow-theme.git"
                    local bundle="tomorrow-theme/textmate2/Tomorrow Theme"
                    ;;
                ublime)
                    clone_or_pull "$bundle.tmbundle/Themes" "git@github.com:imagentleman/ublime.git"
                    tmbundleplist \
                        "Ublime Color Schemes" \
                        "Colorful and Black & White color schemes. Plist generated by tmbundleplist function." \
                        "git@github.com:imagentleman/ublime.git" \
                        > "$bundle.tmbundle/Info.plist"
                    ;;
            esac
        fi
        [[ $(filesize "$bundle.tmbundle") -gt 0 && $(status is-login) ]] && open "$bundle.tmbundle"
    done
    echo "$bundle_dev"
    ls
    popd
}

# delete-tag - Deletes a git tag from both the local and remote repos
function delete-tag() {
    local tag="$1"
    if [[ -z "$tag" ]]; then
        echo "Usage: delete-tag <tag>"
        return 1
    fi
    
    local current_branch=$(git rev-parse --abbrev-ref HEAD)
    local current_remote=$(git config branch."$current_branch".remote)
    
    git tag --delete "$tag"
    git push "$current_remote" --delete refs/tags/"$tag"
}

# dpl - View output from docker containers
function dpl() {
    docker compose logs --follow "$@"
}

# ol - Quick dir navigation to Outlets
function ol() {
    pushd ~/dev/ios/pods/Outlets
}

# members - List members of the given group
function members() {
    local group="$1"
    if [[ -z "$group" ]]; then
        echo "Usage: members group"
        return 1
    fi
    
    for user in $(dscl . -list /Users); do
        if dsmemberutil checkmembership -U "$user" -G "$group" | grep -q "is a member"; then
            echo "$user"
        fi
    done
}

# brew_cache_purge - Purges the Homebrew cache
function brew_cache_purge() {
    rm -rf $(brew --cache)
}


