// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

{% if families %}
import UIKit.UIFont

protocol FontConvertible {
  func font(size: CGFloat) -> UIFont!
}

extension FontConvertible where Self: RawRepresentable, Self.RawValue == String {
  func font(size: CGFloat) -> UIFont! {
    return UIFont(family: self, size: size)
  }
}

extension UIFont {
  convenience init!<FontType: FontConvertible where FontType: RawRepresentable, FontType.RawValue == String>(family: FontType, size: CGFloat) {
    self.init(family: font.rawValue, size: size)
  }
}

struct {{enumName}} {
  {% for family in families %}
  enum {{family.name|swiftIdentifier|snakeToCamelCaseNoPrefix}}: String, FontConvertible {
      {% for font in family.fonts %}
      case {{font.style|swiftIdentifier|snakeToCamelCaseNoPrefix}} = "{{font.fontName}}"
      {% endfor %}
  }
  {% endfor %}
}
{% else %}
// No fonts found
{% endif %}
